---
#========================
# File tasks/main.yml
#
# Description: Creates a dark server
#
# Author: Derek 'dRock' Halsey
#========================

- name: FILE | Ensure temporary directory is present
  file:
    path: "{{ darkServer.tempDir }}"
    state: directory

- name: APT | Install openvpn and unzip
  become: true
  become_user: root
  apt:
    name: "{{ item }}"
    state: present
  with_items:
  - openvpn
  - unzip
  - iptables-persistent

- name: TEMPLATE | configure systemd service for openvpn
  become: true
  become_user: root
  template:
    src: openvpn.service.j2
    dest: /etc/systemd/system/openvpn@openvpn.service
    owner: root
    group: root

- name: SYSTEMD | Enable the openvpn service
  become: true
  become_user: root
  systemd:
    daemon_reload: true
    enabled: true
    name: openvpn@openvpn.service

- name: UNARCHIVE | Download and extract PIA certs
  unarchive:
    src: https://www.privateinternetaccess.com/openvpn/openvpn.zip
    dest: "{{ darkServer.tempDir }}"
    remote_src: true


- name: COPY | Move the extracted certs to /etc/openvpn
  become: true
  become_user: root
  copy:
    src: "{{ item }}"
    dest: /etc/openvpn
    remote_src: true
  with_items:
  - "{{ darkServer.tempDir }}/crl.rsa.2048.pem"
  - "{{ darkServer.tempDir }}/ca.rsa.2048.crt"

- name: TEMPLATE | Template out openvpn configuration file
  become: true
  become_user: root
  template:
    src: openvpn.conf.j2
    dest: /etc/openvpn/openvpn.conf
    owner: root
    group: root

- name: TEMPLATE | Template out PIA login credentials
  become: true
  become_user: root
  template:
    src: login.txt.j2
    dest: /etc/openvpn/login.txt
    owner: root
    group: root
    mode: "u=rw,g=,o="

- name: LINEINFILE | Update DNS in openvpn update-resolv-conf script
  become: true
  become_user: root
  lineinfile:
    path: /etc/openvpn/update-resolv-conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
  - { regexp: 'foreign_option_1', line: "foreign_option_1='dhcp-option DNS {{ darkServer.dns.one }}'" }
  - { regexp: 'foreign_option_2', line: "foreign_option_2='dhcp-option DNS {{ darkServer.dns.two }}'" }
  - { regexp: 'foreign_option_3', line: "foreign_option_3='dhcp-option DNS {{ darkServer.dns.three }}'" }

- name: USER | Add VPN user
  become: true
  become_user: root
  user:
    name: vpn
    groups: samba

- name: SHELL | Flush IP tabels and append new rules
  become: true
  become_user: root
  command: "{{ item }}"
  with_items:
  - 'iptables -F'
  - 'iptables -A OUTPUT ! -o lo -m owner --uid-owner vpn -j DROP'
  - 'sudo netfilter-persistent save'

- name: TEMPLATE | Template out VPN user IP tables, routing rules, and config Change Reverse Path Filtering
  become: true
  become_user: root
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "u=rwx,g=rx,o=rx"
  with_items:
  - { src: iptables.sh.j2, dest: /etc/openvpn/iptables.sh }
  - { src: routing.sh.j2, dest: /etc/openvpn/routing.sh }
  - { src: 9999-vpn.conf.j2, dest: /etc/sysctl.d/9999-vpn.conf }

- name: LINEINFILE | Configure Split Tunnel VPN Routing
  become: true
  become_user: root
  lineinfile:
    path: /etc/iproute2/rt_tables
    line: "200	vpn"
    mode: "u=rwx,g=rx,o=rx"


- name: SHELL | Apply rules
  become: true
  become_user: root
  command: sysctl -p

#
##reboot and check configuration
#sudo reboot now
#sudo systemctl status openvpn@openvpn.service.j2
#curl ipinfo.io
#sudo -u vpn -i -- curl ipinfo.io
#sudo -u vpn -i -- cat /etc/resolv.conf
#
##############http://www.htpcguides.com/configure-deluge-for-vpn-split-tunneling-ubuntu-16-04/
##if everything is good, continue to add deluge and configure
#sudo add-apt-repository ppa:deluge-team/ppa
#sudo apt-get update
#sudo apt-get install deluged deluge-web -y
#
##configure logs
#sudo mkdir -p /var/log/deluge
#sudo chown -R vpn:vpn /var/log/deluge
#sudo chmod -R 770 /var/log/deluge
#sudo vim /etc/logrotate.d/deluge
#
##create systemd service for daemen and web
#sudo vim /etc/systemd/system/deluged.service
#sudo systemctl enable deluged.service
#sudo vim /etc/systemd/system/deluge-web.service
#sudo systemctl enable deluge-web.service
#
##create auto connect
#sudo systemctl restart deluged.service deluge-web.service
#sudo systemctl stop deluged.service deluge-web.service
#
#sudo vim /home/vpn/.config/deluge/web.conf
##edit default_daemon:
#"default_daemon": "127.0.0.1:58846",
#
#sudo systemctl restart deluged.service
#sudo systemctl restart deluge-web.service
#
##deluge should be running now, but we can't get to it (that's a good thing)
#
##configure nginx
#sudo apt-get install nginx -y
#sudo unlink /etc/nginx/sites-enabled/default
#sudo vim /etc/nginx/sites-available/reverse
#sudo ln -s /etc/nginx/sites-available/reverse /etc/nginx/sites-enabled/reverse
#
##test nginx -t
#sudo nginx -t
#
##start everything up
#sudo systemctl restart nginx.service
#sudo systemctl restart deluged.service
#sudo systemctl restart deluge-web.service
#
##log into mace.dinohead.ninj/deluge, password -deluge
#
#sudo systemctl restart nginx.service deluged.service deluge-web.service
#
##check everything
#sudo systemctl status openvpn.service.j2 deluged.service deluge-web.service && curl ipinfo.io && sudo -u vpn -i -- curl ipinfo.io