---
#========================
# File tasks/main.yml
#
# Description:
#
# Author: Derek 'dRock' Halsey
#========================

- name: FILE | Ensure .ssh directory exists
  file:
    path: /home/{{ linuxSetup.user.name }}/.ssh
    state: directory
    owner: "{{ linuxSetup.user.name }}"
    group: "{{ linuxSetup.user.name }}"
    mode: "u=rwx,g=,o="
  vars:
    ansible_password: "{{ linuxSetup.user.password }}"

- name: TEMPLATE | Template out public and private ssh keys
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ linuxSetup.user.name }}"
    group: "{{ linuxSetup.user.name }}"
    mode: "u=rw,g=,o="
  with_items:
  - { src: id_rsa.j2, dest: "/home/{{ linuxSetup.user.name }}/.ssh/id_rsa" }
  - { src: id_rsa.pub.j2, dest: "/home/{{ linuxSetup.user.name }}/.ssh/id_rsa.pub" }
  vars:
    ansible_password: "{{ linuxSetup.user.password }}"

- name: LINEINFILE | Ensure public key is in authorized_keys
  lineinfile:
    line: "{{ linuxSetup.ssh.authorizedKeys }}"
    path: /home/{{ linuxSetup.user.name }}/.ssh/authorized_keys
    state: present
    owner: "{{ linuxSetup.user.name }}"
    group: "{{ linuxSetup.user.name }}"
    mode: "u=rw,g=,o="
    create: true
  vars:
    ansible_password: "{{ linuxSetup.user.password }}"

- name: LINEINFILE | Setup password-less root user
  become: true
  become_user: root
  lineinfile:
    line: "{{ linuxSetup.user.name }} ALL=(ALL:ALL) NOPASSWD:ALL"
    path: /etc/sudoers
    state: present
  vars:
    ansible_become_pass: "{{ linuxSetup.becomePass }}"

- name: TEMPLATE | Set system hostname
  become: true
  become_user: root
  template:
    src: hostname.j2
    dest: /etc/hostname
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  register: linuxSetup_hostname

- name: TEMPLATE | Fix hostfile
  become: true
  become_user: root
  template:
    src: hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  register: linuxSetup_hostfile

- name: APT | Add virtual kernel extra features
  become: true
  become_user: root
  apt:
    update_cache: true
    name: linux-image-extra-virtual
    state: present
  when: inventory_hostname in groups[ 'ubuntu']

- name: Check if a reboot is required
  stat:
    path: /var/run/reboot-required
    get_md5: false
  register: linuxSetup_rebootRequired

- name: SHELL | restart system if hostname was changed or kernel update was applied
  become: true
  become_user: root
  shell: sleep 2 && shutdown -r now "Ansible updates triggered"
  async: 1
  poll: 0
  when: linuxSetup_hostname.changed or linuxSetup_hostfile.changed or linuxSetup_rebootRequired.stat.exists
  register: linuxSetup_reboot

- name: WAIT_FOR | Wait for ssh to resume
  local_action:
    module: wait_for
    port: 22
    host: "{{ linuxSetup.fqdn }}"
    delay: 30
    timeout: 400
  when: linuxSetup_reboot.changed
